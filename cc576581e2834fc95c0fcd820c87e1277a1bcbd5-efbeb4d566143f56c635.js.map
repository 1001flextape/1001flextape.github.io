{"version":3,"file":"cc576581e2834fc95c0fcd820c87e1277a1bcbd5-efbeb4d566143f56c635.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@mui/material/Box/boxClasses.js","webpack://gatsby-starter-default/./node_modules/@mui/material/Box/Box.js","webpack://gatsby-starter-default/./node_modules/@mui/system/createBox/createBox.js","webpack://gatsby-starter-default/./node_modules/@mui/material/Grid/GridContext.js","webpack://gatsby-starter-default/./node_modules/@mui/material/Grid/gridClasses.js","webpack://gatsby-starter-default/./node_modules/@mui/material/Grid/Grid.js","webpack://gatsby-starter-default/./node_modules/@mui/material/styles/useThemeProps.js","webpack://gatsby-starter-default/./node_modules/@mui/system/styled/styled.js","webpack://gatsby-starter-default/./node_modules/@mui/system/useThemeProps/useThemeProps.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from \"../className/index.js\";\nimport { createTheme } from \"../styles/index.js\";\nimport THEME_ID from \"../styles/identifier.js\";\nimport boxClasses from \"./boxClasses.js\";\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","'use client';\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from \"../styleFunctionSx/index.js\";\nimport useTheme from \"../useTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const {\n      className,\n      component = 'div',\n      ...other\n    } = extendSxProp(inProps);\n    return /*#__PURE__*/_jsx(BoxRoot, {\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme,\n      ...other\n    });\n  });\n  return Box;\n}","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst GridContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\nexport default GridContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth',\n// spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`),\n// direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`),\n// wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`),\n// grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","'use client';\n\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport requirePropFactory from \"../utils/requirePropFactory.js\";\nimport styled from \"../styles/styled.js\";\nimport useThemeProps from \"../styles/useThemeProps.js\";\nimport useTheme from \"../styles/useTheme.js\";\nimport GridContext from \"./GridContext.js\";\nimport gridClasses, { getGridUtilityClass } from \"./gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n    if (!size) {\n      return globalStyles;\n    }\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      }\n      // Keep 7 significant numbers.\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${themeSpacing})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      }\n\n      // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n      styles = {\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width,\n        ...more\n      };\n    }\n\n    // No need for a media query for the first size.\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n    if (propValue.startsWith('column')) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n    return output;\n  });\n}\n\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\nfunction extractZeroValueBreakpointKeys({\n  breakpoints,\n  values\n}) {\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: theme.spacing(-propValue),\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: themeSpacing\n          }\n        };\n      }\n      if (zeroValueBreakpointKeys?.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        marginTop: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        const negativeValue = theme.spacing(-propValue);\n        return {\n          width: `calc(100% + ${themeSpacing})`,\n          marginLeft: negativeValue,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: themeSpacing\n          }\n        };\n      }\n      if (zeroValueBreakpointKeys?.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  }\n  // in case of object `spacing`\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n}\n\n// Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = [];\n\n    // in case of grid item\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(\n// FIXME(romgrk): Can't use memoTheme here\n({\n  ownerState\n}) => ({\n  boxSizing: 'border-box',\n  ...(ownerState.container && {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%'\n  }),\n  ...(ownerState.item && {\n    margin: 0 // For instance, it's useful when used with a `figure` element.\n  }),\n  ...(ownerState.zeroMinWidth && {\n    minWidth: 0\n  }),\n  ...(ownerState.wrap !== 'wrap' && {\n    flexWrap: ownerState.wrap\n  })\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  }\n  // in case of object `spacing`\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = [];\n\n  // in case of grid item\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\n/**\n * @deprecated Use the [`Grid2`](https://mui.com/material-ui/react-grid2/) component instead.\n */\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n  const {\n    className,\n    columns: columnsProp,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    rowSpacing: rowSpacingProp,\n    spacing = 0,\n    wrap = 'wrap',\n    zeroMinWidth = false,\n    ...other\n  } = props;\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext);\n\n  // columns set with default breakpoint unit of 12\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n  const otherFiltered = {\n    ...other\n  };\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n  const ownerState = {\n    ...props,\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing,\n    ...breakpointsValues,\n    breakpoints: breakpoints.keys\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, {\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      ...otherFiltered\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid);\n  // eslint-disable-next-line no-useless-concat\n  Grid['propTypes' + ''] = {\n    // eslint-disable-next-line react/forbid-foreign-prop-types\n    ...Grid.propTypes,\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  };\n}\nexport default Grid;","'use client';\n\nimport systemUseThemeProps from '@mui/system/useThemeProps';\nimport defaultTheme from \"./defaultTheme.js\";\nimport THEME_ID from \"./identifier.js\";\nexport default function useThemeProps({\n  props,\n  name\n}) {\n  return systemUseThemeProps({\n    props,\n    name,\n    defaultTheme,\n    themeId: THEME_ID\n  });\n}","import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;","'use client';\n\nimport getThemeProps from \"./getThemeProps.js\";\nimport useTheme from \"../useTheme/index.js\";\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme,\n  themeId\n}) {\n  let theme = useTheme(defaultTheme);\n  if (themeId) {\n    theme = theme[themeId] || theme;\n  }\n  return getThemeProps({\n    theme,\n    name,\n    props\n  });\n}"],"names":["defaultTheme","createTheme","Box","options","themeId","defaultClassName","generateClassName","BoxRoot","shouldForwardProp","prop","styleFunctionSx","inProps","ref","theme","useTheme","className","component","other","extendSxProp","as","clsx","createBox","root","ClassNameGenerator","generate","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","generateUtilityClasses","map","spacing","direction","wrap","size","extractZeroValueBreakpointKeys","breakpoints","values","nonZeroKey","Object","keys","forEach","key","sortedBreakpointKeysByValue","sort","a","b","slice","indexOf","GridRoot","styled","name","overridesResolver","props","styles","ownerState","container","item","zeroMinWidth","spacingStyles","Number","isNaN","String","breakpoint","value","push","resolveSpacingStyles","breakpointsStyles","boxSizing","display","flexWrap","width","margin","minWidth","directionValues","propValue","output","flexDirection","startsWith","maxWidth","rowSpacing","rowSpacingValues","zeroValueBreakpointKeys","themeSpacing","marginTop","paddingTop","includes","columnSpacing","columnSpacingValues","marginLeft","paddingLeft","reduce","globalStyles","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","Math","round","more","fullWidth","assign","up","useUtilityClasses","classes","spacingClasses","resolveSpacingClasses","breakpointsClasses","slots","composeClasses","Grid","themeProps","useThemeProps","columnsProp","columnSpacingProp","rowSpacingProp","columnsContext","breakpointsValues","otherFiltered","Provider","children"],"sourceRoot":""}